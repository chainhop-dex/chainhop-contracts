{
  "address": "0x83114D0243b06BF6986DB02c560869859a23DA01",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        },
        {
          "internalType": "address[][]",
          "name": "_poolTokens",
          "type": "address[][]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[][]",
          "name": "poolTokens",
          "type": "address[][]"
        }
      ],
      "name": "PoolTokensSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ICodec.SwapDescription",
          "name": "_swap",
          "type": "tuple"
        }
      ],
      "name": "decodeCalldata",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amountInOverride",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "encodeCalldataWithOverride",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "swapCalldata",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolToTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        },
        {
          "internalType": "address[][]",
          "name": "_poolTokens",
          "type": "address[][]"
        }
      ],
      "name": "setPoolTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8ff77c113775615884a5186baad0a07e7383b6694f106db4c7ad46c7719fa2c7",
  "receipt": {
    "to": null,
    "from": "0x8b5F94a2c2e23eE8cC0Ff56872aF973243eF7628",
    "contractAddress": "0x83114D0243b06BF6986DB02c560869859a23DA01",
    "transactionIndex": 84,
    "gasUsed": "996073",
    "logsBloom": "0x
    "blockHash": "0xda5bdc05ac4e4a51ea453c66914e9f105dbb18ee0a2a712e25eb28a468e046c8",
    "transactionHash": "0x8ff77c113775615884a5186baad0a07e7383b6694f106db4c7ad46c7719fa2c7",
    "logs": [
      {
        "transactionIndex": 84,
        "blockNumber": 16088910,
        "transactionHash": "0x8ff77c113775615884a5186baad0a07e7383b6694f106db4c7ad46c7719fa2c7",
        "address": "0x83114D0243b06BF6986DB02c560869859a23DA01",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008b5f94a2c2e23ee8cc0ff56872af973243ef7628"
        ],
        "data": "0x",
        "logIndex": 207,
        "blockHash": "0xda5bdc05ac4e4a51ea453c66914e9f105dbb18ee0a2a712e25eb28a468e046c8"
      },
      {
        "transactionIndex": 84,
        "blockNumber": 16088910,
        "transactionHash": "0x8ff77c113775615884a5186baad0a07e7383b6694f106db4c7ad46c7719fa2c7",
        "address": "0x83114D0243b06BF6986DB02c560869859a23DA01",
        "topics": [
          "0x38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a5407eae9ba41422680e2e00537571bcc53efbfd0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000040000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000057ab1ec28d129707052df4df418d58a2d46d5f51",
        "logIndex": 208,
        "blockHash": "0xda5bdc05ac4e4a51ea453c66914e9f105dbb18ee0a2a712e25eb28a468e046c8"
      }
    ],
    "blockNumber": 16088910,
    "cumulativeGasUsed": "9388001",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xA5407eAE9Ba41422680e2e00537571bcC53efBfD"
    ],
    [
      [
        "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "0xdAC17F958D2ee523a2206206994597C13D831ec7",
        "0x57Ab1ec28D129707052df4dF418D58a2D46d5f51"
      ]
    ]
  ],
  "numDeployments": 2,
  "solcInputHash": "f42499825d9c84dd927a82dd723e134f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_poolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[][]\",\"name\":\"poolTokens\",\"type\":\"address[][]\"}],\"name\":\"PoolTokensSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ICodec.SwapDescription\",\"name\":\"_swap\",\"type\":\"tuple\"}],\"name\":\"decodeCalldata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amountInOverride\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"encodeCalldataWithOverride\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"swapCalldata\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolToTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_poolTokens\",\"type\":\"address[][]\"}],\"name\":\"setPoolTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"padoriku\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"a special codec for pools that implement exchange_underlying() slightly differently than others. e.g. \\\"sUSD\\\" pool on Ethereum and \\\"aave\\\" on Polygon\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"encode/decode calldata\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/codecs/CurveSpecialMetaPoolCodec.sol\":\"CurveSpecialMetaPoolCodec\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/codecs/CurveSpecialMetaPoolCodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.15;\\n\\nimport \\\"../lib/Ownable.sol\\\";\\nimport \\\"../interfaces/ICodec.sol\\\";\\nimport \\\"../interfaces/ICurvePool.sol\\\";\\nimport \\\"./CurveTokenAddresses.sol\\\";\\n\\n/**\\n * @title a special codec for pools that implement exchange_underlying() slightly differently than others.\\n * e.g. \\\"sUSD\\\" pool on Ethereum and \\\"aave\\\" on Polygon\\n * @author padoriku\\n * @notice encode/decode calldata\\n */\\ncontract CurveSpecialMetaPoolCodec is ICodec, CurveTokenAddresses {\\n    struct SwapCalldata {\\n        int128 i;\\n        int128 j;\\n        uint256 dx;\\n        uint256 min_dy;\\n    }\\n\\n    constructor(address[] memory _pools, address[][] memory _poolTokens) CurveTokenAddresses(_pools, _poolTokens) {}\\n\\n    function decodeCalldata(ICodec.SwapDescription calldata _swap)\\n        external\\n        view\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        )\\n    {\\n        SwapCalldata memory data = abi.decode((_swap.data[4:]), (SwapCalldata));\\n        amountIn = data.dx;\\n        uint256 i = uint256(uint128(data.i));\\n        uint256 j = uint256(uint128(data.j));\\n\\n        address[] memory tokens = poolToTokens[_swap.dex];\\n        if (tokens.length > 0) {\\n            // some pool(sUSD)'s implementation of underlying_coins takes uint128 instead of uint256 as input\\n            // register these pool's token addresses manually to workaround this.\\n            tokenIn = tokens[i];\\n            tokenOut = tokens[j];\\n        } else {\\n            tokenIn = ICurvePool(_swap.dex).underlying_coins(i);\\n            tokenOut = ICurvePool(_swap.dex).underlying_coins(j);\\n        }\\n    }\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata _data,\\n        uint256 _amountInOverride,\\n        address // _receiverOverride\\n    ) external pure returns (bytes memory swapCalldata) {\\n        bytes4 selector = bytes4(_data);\\n        SwapCalldata memory data = abi.decode((_data[4:]), (SwapCalldata));\\n        data.dx = _amountInOverride;\\n        return abi.encodeWithSelector(selector, data);\\n    }\\n}\\n\",\"keccak256\":\"0xa97ac540433801204f1b0100af7b9c8684156584d18ce3c1cbf9ceb3aaacce67\",\"license\":\"GPL-3.0-only\"},\"contracts/codecs/CurveTokenAddresses.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.15;\\n\\nimport \\\"../lib/Ownable.sol\\\";\\n\\ncontract CurveTokenAddresses is Ownable {\\n    event PoolTokensSet(address[] pools, address[][] poolTokens);\\n\\n    // Pool address to *underlying* token addresses. position sensitive.\\n    // This is needed because some of the metapools fail to implement curve's underlying_coins() spec,\\n    // therefore no consistant way to query token addresses by their indices.\\n    mapping(address => address[]) public poolToTokens;\\n\\n    constructor(address[] memory _pools, address[][] memory _poolTokens) {\\n        _setPoolTokens(_pools, _poolTokens);\\n    }\\n\\n    function setPoolTokens(address[] calldata _pools, address[][] calldata _poolTokens) external onlyOwner {\\n        _setPoolTokens(_pools, _poolTokens);\\n    }\\n\\n    function _setPoolTokens(address[] memory _pools, address[][] memory _poolTokens) private {\\n        require(_pools.length == _poolTokens.length, \\\"len mm\\\");\\n        for (uint256 i = 0; i < _pools.length; i++) {\\n            poolToTokens[_pools[i]] = _poolTokens[i];\\n        }\\n        emit PoolTokensSet(_pools, _poolTokens);\\n    }\\n}\\n\",\"keccak256\":\"0xd498d529c8ce0535df4778ce5360585381b78e665106d1897214e3b9a5be001a\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ICodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface ICodec {\\n    struct SwapDescription {\\n        address dex; // the DEX to use for the swap, zero address implies no swap needed\\n        bytes data; // the data to call the dex with\\n    }\\n\\n    function decodeCalldata(SwapDescription calldata swap)\\n        external\\n        view\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        );\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata data,\\n        uint256 amountInOverride,\\n        address receiverOverride\\n    ) external pure returns (bytes memory swapCalldata);\\n}\\n\",\"keccak256\":\"0x3c063f0ffd87df3df38998c78273bc00ac835331905be997c7e3c6aa3bdbdcc4\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ICurvePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.15;\\n\\ninterface ICurvePool {\\n    function coins(uint256 i) external view returns (address);\\n\\n    function underlying_coins(uint256 i) external view returns (address);\\n\\n    // plain & meta pool\\n    function get_dy(\\n        int128 i,\\n        int128 j,\\n        uint256 dx\\n    ) external view returns (uint256);\\n\\n    // meta pool\\n    function get_dy_underlying(\\n        int128 i,\\n        int128 j,\\n        uint256 dx\\n    ) external view returns (uint256);\\n\\n    // plain & meta pool\\n    function exchange(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy\\n    ) external;\\n\\n    // meta pool\\n    function exchange_underlying(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    // special function signature that is only used by the sUSD pool on Ethereum 0xA5407eAE9Ba41422680e2e00537571bcC53efBfD\\n    function exchange_underlying(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2be669549b0da2b01608c060c7ae85d3eb4f2deb42e0b12d99c7ee8a7f8fa6a3\",\"license\":\"GPL-3.0-only\"},\"contracts/lib/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n *\\n * This adds a normal func that setOwner if _owner is address(0). So we can't allow\\n * renounceOwnership. So we can support Proxy based upgradable contract\\n */\\nabstract contract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Only to be called by inherit contracts, in their init func called by Proxy\\n     * we require _owner == address(0), which is only possible when it's a delegateCall\\n     * because constructor sets _owner in contract state.\\n     */\\n    function initOwner() internal {\\n        require(_owner == address(0), \\\"owner already set\\\");\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x2a92103195b8dce0f34fdf9bf7f94ddf38bf8edf0c0fd4be21323c47016687e9\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200135838038062001358833981016040819052620000349162000336565b8181620000413362000057565b6200004d8282620000a7565b505050506200052d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114620000e65760405162461bcd60e51b81526020600482015260066024820152656c656e206d6d60d01b604482015260640160405180910390fd5b60005b82518110156200017c5781818151811062000108576200010862000419565b60200260200101516001600085848151811062000129576200012962000419565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020908051906020019062000166929190620001bc565b508062000173816200042f565b915050620000e9565b507f38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e8282604051620001b092919062000457565b60405180910390a15050565b82805482825590600052602060002090810192821562000214579160200282015b828111156200021457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001dd565b506200022292915062000226565b5090565b5b8082111562000222576000815560010162000227565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200027e576200027e6200023d565b604052919050565b60006001600160401b03821115620002a257620002a26200023d565b5060051b60200190565b600082601f830112620002be57600080fd5b81516020620002d7620002d18362000286565b62000253565b82815260059290921b84018101918181019086841115620002f757600080fd5b8286015b848110156200032b5780516001600160a01b03811681146200031d5760008081fd5b8352918301918301620002fb565b509695505050505050565b600080604083850312156200034a57600080fd5b82516001600160401b03808211156200036257600080fd5b6200037086838701620002ac565b93506020915081850151818111156200038857600080fd5b8501601f810187136200039a57600080fd5b8051620003ab620002d18262000286565b81815260059190911b82018401908481019089831115620003cb57600080fd5b8584015b838110156200040857805186811115620003e95760008081fd5b620003f98c8983890101620002ac565b845250918601918601620003cf565b508096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200045057634e487b7160e01b600052601160045260246000fd5b5060010190565b604080825283519082018190526000906020906060840190828701845b828110156200049b5781516001600160a01b03168452928401929084019060010162000474565b50505083810382850152845180825282820190600581901b8301840187850160005b838110156200051e57858303601f1901855281518051808552908801908885019060005b81811015620005085783516001600160a01b03168352928a0192918a0191600101620004e1565b50509588019593505090860190600101620004bd565b50909998505050505050505050565b610e1b806200053d6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80639c20a863116100505780639c20a863146100f9578063f2fde38b1461010c578063ffe3fd301461012157600080fd5b8063358f0e1c146100775780634c6da269146100b45780638da5cb5b146100d4575b600080fd5b61008a61008536600461081c565b610134565b604080519384526001600160a01b0392831660208501529116908201526060015b60405180910390f35b6100c76100c2366004610873565b610368565b6040516100ab91906108fe565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100ab565b6100e1610107366004610953565b61043a565b61011f61011a36600461097f565b610472565b005b61011f61012f3660046109e8565b610568565b60008080806101466020860186610a54565b610154916004908290610a9b565b8101906101619190610b23565b604081015181516020808401519297509293506fffffffffffffffffffffffffffffffff9081169291169060009060019082906101a0908b018b61097f565b6001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561021457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f6575b505050505090506000815111156102625780838151811061023757610237610b95565b6020026020010151955080828151811061025357610253610b95565b6020026020010151945061035d565b61026f602089018961097f565b6001600160a01b031663b9947eb0846040518263ffffffff1660e01b815260040161029c91815260200190565b602060405180830381865afa1580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190610bab565b95506102ec602089018961097f565b6001600160a01b031663b9947eb0836040518263ffffffff1660e01b815260040161031991815260200190565b602060405180830381865afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610bab565b94505b505050509193909250565b606060006103768587610bc8565b90506000610387866004818a610a9b565b8101906103949190610b23565b604081810187815290518251600f90810b60248301526020840151900b60448201529051606482015260608201516084820152909150829060a40160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915292505050949350505050565b6001602052816000526040600020818154811061045657600080fd5b6000918252602090912001546001600160a01b03169150829050565b336104856000546001600160a01b031690565b6001600160a01b0316146104e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661055c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104d7565b6105658161061f565b50565b3361057b6000546001600160a01b031690565b6001600160a01b0316146105d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d7565b6106198484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506106149250859150869050610c34565b61067c565b50505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146106cd5760405162461bcd60e51b815260206004820152600660248201527f6c656e206d6d000000000000000000000000000000000000000000000000000060448201526064016104d7565b60005b8251811015610757578181815181106106eb576106eb610b95565b60200260200101516001600085848151811061070957610709610b95565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000209080519060200190610744929190610795565b508061074f81610d08565b9150506106d0565b507f38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e8282604051610789929190610d73565b60405180910390a15050565b8280548282559060005260206000209081019282156107f7579160200282015b828111156107f7578251825473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039091161782556020909201916001909101906107b5565b50610803929150610807565b5090565b5b808211156108035760008155600101610808565b60006020828403121561082e57600080fd5b813567ffffffffffffffff81111561084557600080fd5b82016040818503121561085757600080fd5b9392505050565b6001600160a01b038116811461056557600080fd5b6000806000806060858703121561088957600080fd5b843567ffffffffffffffff808211156108a157600080fd5b818701915087601f8301126108b557600080fd5b8135818111156108c457600080fd5b8860208285010111156108d657600080fd5b60209283019650945050850135915060408501356108f38161085e565b939692955090935050565b600060208083528351808285015260005b8181101561092b5785810183015185820160400152820161090f565b8181111561093d576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561096657600080fd5b82356109718161085e565b946020939093013593505050565b60006020828403121561099157600080fd5b81356108578161085e565b60008083601f8401126109ae57600080fd5b50813567ffffffffffffffff8111156109c657600080fd5b6020830191508360208260051b85010111156109e157600080fd5b9250929050565b600080600080604085870312156109fe57600080fd5b843567ffffffffffffffff80821115610a1657600080fd5b610a228883890161099c565b90965094506020870135915080821115610a3b57600080fd5b50610a488782880161099c565b95989497509550505050565b6000808335601e19843603018112610a6b57600080fd5b83018035915067ffffffffffffffff821115610a8657600080fd5b6020019150368190038213156109e157600080fd5b60008085851115610aab57600080fd5b83861115610ab857600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b0457610b04610ac5565b604052919050565b8035600f81900b8114610b1e57600080fd5b919050565b600060808284031215610b3557600080fd5b6040516080810181811067ffffffffffffffff82111715610b5857610b58610ac5565b604052610b6483610b0c565b8152610b7260208401610b0c565b602082015260408301356040820152606083013560608201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610bbd57600080fd5b81516108578161085e565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610c085780818660040360031b1b83161692505b505092915050565b600067ffffffffffffffff821115610c2a57610c2a610ac5565b5060051b60200190565b6000610c47610c4284610c10565b610adb565b83815260208082019190600586811b860136811115610c6557600080fd5b865b81811015610cfb57803567ffffffffffffffff811115610c875760008081fd5b880136601f820112610c995760008081fd5b8035610ca7610c4282610c10565b81815290851b82018601908681019036831115610cc45760008081fd5b928701925b82841015610ceb578335610cdc8161085e565b82529287019290870190610cc9565b8952505050948301948301610c67565b5092979650505050505050565b600060018201610d2857634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b83811015610d685781516001600160a01b031687529582019590820190600101610d43565b509495945050505050565b604081526000610d866040830185610d2f565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015610dd657601f19878403018552610dc4838351610d2f565b94860194925090850190600101610da8565b5090999850505050505050505056fea2646970667358221220927619b297564246d1cf9a669805ad086709546cc812e05c5fe1a2ad8dcc3f1a64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80639c20a863116100505780639c20a863146100f9578063f2fde38b1461010c578063ffe3fd301461012157600080fd5b8063358f0e1c146100775780634c6da269146100b45780638da5cb5b146100d4575b600080fd5b61008a61008536600461081c565b610134565b604080519384526001600160a01b0392831660208501529116908201526060015b60405180910390f35b6100c76100c2366004610873565b610368565b6040516100ab91906108fe565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100ab565b6100e1610107366004610953565b61043a565b61011f61011a36600461097f565b610472565b005b61011f61012f3660046109e8565b610568565b60008080806101466020860186610a54565b610154916004908290610a9b565b8101906101619190610b23565b604081015181516020808401519297509293506fffffffffffffffffffffffffffffffff9081169291169060009060019082906101a0908b018b61097f565b6001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561021457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f6575b505050505090506000815111156102625780838151811061023757610237610b95565b6020026020010151955080828151811061025357610253610b95565b6020026020010151945061035d565b61026f602089018961097f565b6001600160a01b031663b9947eb0846040518263ffffffff1660e01b815260040161029c91815260200190565b602060405180830381865afa1580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190610bab565b95506102ec602089018961097f565b6001600160a01b031663b9947eb0836040518263ffffffff1660e01b815260040161031991815260200190565b602060405180830381865afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610bab565b94505b505050509193909250565b606060006103768587610bc8565b90506000610387866004818a610a9b565b8101906103949190610b23565b604081810187815290518251600f90810b60248301526020840151900b60448201529051606482015260608201516084820152909150829060a40160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915292505050949350505050565b6001602052816000526040600020818154811061045657600080fd5b6000918252602090912001546001600160a01b03169150829050565b336104856000546001600160a01b031690565b6001600160a01b0316146104e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661055c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104d7565b6105658161061f565b50565b3361057b6000546001600160a01b031690565b6001600160a01b0316146105d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d7565b6106198484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506106149250859150869050610c34565b61067c565b50505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146106cd5760405162461bcd60e51b815260206004820152600660248201527f6c656e206d6d000000000000000000000000000000000000000000000000000060448201526064016104d7565b60005b8251811015610757578181815181106106eb576106eb610b95565b60200260200101516001600085848151811061070957610709610b95565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000209080519060200190610744929190610795565b508061074f81610d08565b9150506106d0565b507f38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e8282604051610789929190610d73565b60405180910390a15050565b8280548282559060005260206000209081019282156107f7579160200282015b828111156107f7578251825473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039091161782556020909201916001909101906107b5565b50610803929150610807565b5090565b5b808211156108035760008155600101610808565b60006020828403121561082e57600080fd5b813567ffffffffffffffff81111561084557600080fd5b82016040818503121561085757600080fd5b9392505050565b6001600160a01b038116811461056557600080fd5b6000806000806060858703121561088957600080fd5b843567ffffffffffffffff808211156108a157600080fd5b818701915087601f8301126108b557600080fd5b8135818111156108c457600080fd5b8860208285010111156108d657600080fd5b60209283019650945050850135915060408501356108f38161085e565b939692955090935050565b600060208083528351808285015260005b8181101561092b5785810183015185820160400152820161090f565b8181111561093d576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561096657600080fd5b82356109718161085e565b946020939093013593505050565b60006020828403121561099157600080fd5b81356108578161085e565b60008083601f8401126109ae57600080fd5b50813567ffffffffffffffff8111156109c657600080fd5b6020830191508360208260051b85010111156109e157600080fd5b9250929050565b600080600080604085870312156109fe57600080fd5b843567ffffffffffffffff80821115610a1657600080fd5b610a228883890161099c565b90965094506020870135915080821115610a3b57600080fd5b50610a488782880161099c565b95989497509550505050565b6000808335601e19843603018112610a6b57600080fd5b83018035915067ffffffffffffffff821115610a8657600080fd5b6020019150368190038213156109e157600080fd5b60008085851115610aab57600080fd5b83861115610ab857600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b0457610b04610ac5565b604052919050565b8035600f81900b8114610b1e57600080fd5b919050565b600060808284031215610b3557600080fd5b6040516080810181811067ffffffffffffffff82111715610b5857610b58610ac5565b604052610b6483610b0c565b8152610b7260208401610b0c565b602082015260408301356040820152606083013560608201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610bbd57600080fd5b81516108578161085e565b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610c085780818660040360031b1b83161692505b505092915050565b600067ffffffffffffffff821115610c2a57610c2a610ac5565b5060051b60200190565b6000610c47610c4284610c10565b610adb565b83815260208082019190600586811b860136811115610c6557600080fd5b865b81811015610cfb57803567ffffffffffffffff811115610c875760008081fd5b880136601f820112610c995760008081fd5b8035610ca7610c4282610c10565b81815290851b82018601908681019036831115610cc45760008081fd5b928701925b82841015610ceb578335610cdc8161085e565b82529287019290870190610cc9565b8952505050948301948301610c67565b5092979650505050505050565b600060018201610d2857634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b83811015610d685781516001600160a01b031687529582019590820190600101610d43565b509495945050505050565b604081526000610d866040830185610d2f565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015610dd657601f19878403018552610dc4838351610d2f565b94860194925090850190600101610da8565b5090999850505050505050505056fea2646970667358221220927619b297564246d1cf9a669805ad086709546cc812e05c5fe1a2ad8dcc3f1a64736f6c634300080f0033",
  "devdoc": {
    "author": "padoriku",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "a special codec for pools that implement exchange_underlying() slightly differently than others. e.g. \"sUSD\" pool on Ethereum and \"aave\" on Polygon",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "encode/decode calldata",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9738,
        "contract": "contracts/codecs/CurveSpecialMetaPoolCodec.sol:CurveSpecialMetaPoolCodec",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6336,
        "contract": "contracts/codecs/CurveSpecialMetaPoolCodec.sol:CurveSpecialMetaPoolCodec",
        "label": "poolToTokens",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      }
    }
  }
}