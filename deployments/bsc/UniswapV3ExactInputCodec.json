{
  "address": "0x4a97B63b27576d774b6BD288Fa6aAe24F086B84c",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ICodec.SwapDescription",
          "name": "_swap",
          "type": "tuple"
        }
      ],
      "name": "decodeCalldata",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amountInOverride",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiverOverride",
          "type": "address"
        }
      ],
      "name": "encodeCalldataWithOverride",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "swapCalldata",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x4d05c7df7f4a68fd8a99aac54b7064ecba65c9a04dfa7a93b723e4d9f2c5c711",
  "receipt": {
    "to": null,
    "from": "0x58b529F9084D7eAA598EB3477Fe36064C5B7bbC1",
    "contractAddress": "0x4a97B63b27576d774b6BD288Fa6aAe24F086B84c",
    "transactionIndex": 316,
    "gasUsed": "498597",
    "logsBloom": "0x
    "blockHash": "0x645b09db5634017286ae00e2eb459f094d269750a0983a226112b0229a316bfe",
    "transactionHash": "0x4d05c7df7f4a68fd8a99aac54b7064ecba65c9a04dfa7a93b723e4d9f2c5c711",
    "logs": [],
    "blockNumber": 16538810,
    "cumulativeGasUsed": "45550710",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5284e455062929d7f89fe20002113c31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ICodec.SwapDescription\",\"name\":\"_swap\",\"type\":\"tuple\"}],\"name\":\"decodeCalldata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amountInOverride\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiverOverride\",\"type\":\"address\"}],\"name\":\"encodeCalldataWithOverride\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"swapCalldata\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/codecs/UniswapV3ExactInputCodec.sol\":\"UniswapV3ExactInputCodec\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/codecs/UniswapV3ExactInputCodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.12;\\n\\nimport \\\"../interfaces/ICodec.sol\\\";\\nimport \\\"../interfaces/ISwapRouter.sol\\\";\\n\\ncontract UniswapV3ExactInputCodec is ICodec {\\n    function decodeCalldata(ICodec.SwapDescription calldata _swap)\\n        external\\n        pure\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        )\\n    {\\n        ISwapRouter.ExactInputSingleParams memory data = abi.decode(\\n            (_swap.data[4:]),\\n            (ISwapRouter.ExactInputSingleParams)\\n        );\\n        return (data.amountIn, data.tokenIn, data.tokenOut);\\n    }\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata _data,\\n        uint256 _amountInOverride,\\n        address _receiverOverride\\n    ) external pure returns (bytes memory swapCalldata) {\\n        bytes4 selector = bytes4(_data);\\n        ISwapRouter.ExactInputParams memory data = abi.decode((_data[4:]), (ISwapRouter.ExactInputParams));\\n        data.amountIn = _amountInOverride;\\n        data.recipient = _receiverOverride;\\n        return abi.encodeWithSelector(selector, data);\\n    }\\n}\\n\",\"keccak256\":\"0x9997c3201befb26a26f3e62a272a5ae02ae54f91242bb54835ea537a76664764\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ICodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface ICodec {\\n    struct SwapDescription {\\n        address dex; // the DEX to use for the swap, zero address implies no swap needed\\n        bytes data; // the data to call the dex with\\n    }\\n\\n    function decodeCalldata(SwapDescription calldata swap)\\n        external\\n        view\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        );\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata data,\\n        uint256 amountInOverride,\\n        address receiverOverride\\n    ) external pure returns (bytes memory swapCalldata);\\n}\\n\",\"keccak256\":\"0x3c063f0ffd87df3df38998c78273bc00ac835331905be997c7e3c6aa3bdbdcc4\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.12;\\npragma abicoder v2;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x0b1a3f3f9bf426c002f27a286f8304df32c3e0a81ca0998e635a2da4a6f4e538\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061080f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063358f0e1c1461003b5780634c6da26914610066575b600080fd5b61004e6100493660046101a1565b610086565b60405161005d9392919061020d565b60405180910390f35b6100796100743660046102b6565b6100cd565b60405161005d9190610387565b6000808080610098602086018661039f565b6100a69160049082906103fe565b8101906100b3919061058e565b60a081015181516020909201519097919650945092505050565b606060006100db85876105b0565b905060006100ec866004818a6103fe565b8101906100f99190610727565b6060810186905273ffffffffffffffffffffffffffffffffffffffff8516602082015260405190915082906101329083906024016107c8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152925050505b949350505050565b60006040828403121561019b5761019b600080fd5b50919050565b6000602082840312156101b6576101b6600080fd5b813567ffffffffffffffff8111156101d0576101d0600080fd5b61017e84828501610186565b805b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b6101de816101e4565b6060810161021b82866101dc565b6102286020830185610204565b61017e6040830184610204565b60008083601f84011261024a5761024a600080fd5b50813567ffffffffffffffff81111561026557610265600080fd5b60208301915083600182028301111561028057610280600080fd5b9250929050565b805b811461029457600080fd5b50565b80356101fe81610287565b610289816101e4565b80356101fe816102a2565b600080600080606085870312156102cf576102cf600080fd5b843567ffffffffffffffff8111156102e9576102e9600080fd5b6102f587828801610235565b9450945050602061030887828801610297565b9250506040610319878288016102ab565b91505092959194509250565b60005b83811015610340578181015183820152602001610328565b8381111561034f576000848401525b50505050565b600061035f825190565b808452602084019350610376818560208601610325565b601f01601f19169290920192915050565b602080825281016103988184610355565b9392505050565b6000808335601e19368590030181126103ba576103ba600080fd5b80840192508235915067ffffffffffffffff8211156103db576103db600080fd5b6020830192506001820236038313156103f6576103f6600080fd5b509250929050565b6000808585111561041157610411600080fd5b8386111561042157610421600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561046a5761046a61042e565b6040525050565b600061047c60405190565b90506104888282610444565b919050565b62ffffff8116610289565b80356101fe8161048d565b73ffffffffffffffffffffffffffffffffffffffff8116610289565b80356101fe816104a3565b600061010082840312156104e0576104e0600080fd5b6104eb610100610471565b905060006104f984846102ab565b825250602061050a848483016102ab565b602083015250604061051e84828501610498565b6040830152506060610532848285016102ab565b606083015250608061054684828501610297565b60808301525060a061055a84828501610297565b60a08301525060c061056e84828501610297565b60c08301525060e0610582848285016104bf565b60e08301525092915050565b600061010082840312156105a4576105a4600080fd5b600061017e84846104ca565b80356001600160e01b031916828260048210156105e3576105de6001600160e01b0319836004036008021b90565b831692505b505092915050565b600067ffffffffffffffff8211156106055761060561042e565b601f19601f83011660200192915050565b82818337506000910152565b6000610635610630846105eb565b610471565b90508281526020810184848401111561065057610650600080fd5b61065b848285610616565b509392505050565b600082601f83011261067757610677600080fd5b813561017e848260208601610622565b600060a0828403121561069c5761069c600080fd5b6106a660a0610471565b9050813567ffffffffffffffff8111156106c2576106c2600080fd5b6106ce84828501610663565b82525060206106df848483016102ab565b60208301525060406106f384828501610297565b604083015250606061070784828501610297565b606083015250608061071b84828501610297565b60808301525092915050565b60006020828403121561073c5761073c600080fd5b813567ffffffffffffffff81111561075657610756600080fd5b61017e84828501610687565b805160a08084526000919084019061077a8282610355565b915050602083015161078f6020860182610204565b5060408301516107a260408601826101dc565b5060608301516107b560608601826101dc565b50608083015161065b60808601826101dc565b60208082528101610398818461076256fea264697066735822122074ef6d45ab6e94047659a2e87f158e4c97678a424b5b74b22e4788ec2429418164736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063358f0e1c1461003b5780634c6da26914610066575b600080fd5b61004e6100493660046101a1565b610086565b60405161005d9392919061020d565b60405180910390f35b6100796100743660046102b6565b6100cd565b60405161005d9190610387565b6000808080610098602086018661039f565b6100a69160049082906103fe565b8101906100b3919061058e565b60a081015181516020909201519097919650945092505050565b606060006100db85876105b0565b905060006100ec866004818a6103fe565b8101906100f99190610727565b6060810186905273ffffffffffffffffffffffffffffffffffffffff8516602082015260405190915082906101329083906024016107c8565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152925050505b949350505050565b60006040828403121561019b5761019b600080fd5b50919050565b6000602082840312156101b6576101b6600080fd5b813567ffffffffffffffff8111156101d0576101d0600080fd5b61017e84828501610186565b805b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b6101de816101e4565b6060810161021b82866101dc565b6102286020830185610204565b61017e6040830184610204565b60008083601f84011261024a5761024a600080fd5b50813567ffffffffffffffff81111561026557610265600080fd5b60208301915083600182028301111561028057610280600080fd5b9250929050565b805b811461029457600080fd5b50565b80356101fe81610287565b610289816101e4565b80356101fe816102a2565b600080600080606085870312156102cf576102cf600080fd5b843567ffffffffffffffff8111156102e9576102e9600080fd5b6102f587828801610235565b9450945050602061030887828801610297565b9250506040610319878288016102ab565b91505092959194509250565b60005b83811015610340578181015183820152602001610328565b8381111561034f576000848401525b50505050565b600061035f825190565b808452602084019350610376818560208601610325565b601f01601f19169290920192915050565b602080825281016103988184610355565b9392505050565b6000808335601e19368590030181126103ba576103ba600080fd5b80840192508235915067ffffffffffffffff8211156103db576103db600080fd5b6020830192506001820236038313156103f6576103f6600080fd5b509250929050565b6000808585111561041157610411600080fd5b8386111561042157610421600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561046a5761046a61042e565b6040525050565b600061047c60405190565b90506104888282610444565b919050565b62ffffff8116610289565b80356101fe8161048d565b73ffffffffffffffffffffffffffffffffffffffff8116610289565b80356101fe816104a3565b600061010082840312156104e0576104e0600080fd5b6104eb610100610471565b905060006104f984846102ab565b825250602061050a848483016102ab565b602083015250604061051e84828501610498565b6040830152506060610532848285016102ab565b606083015250608061054684828501610297565b60808301525060a061055a84828501610297565b60a08301525060c061056e84828501610297565b60c08301525060e0610582848285016104bf565b60e08301525092915050565b600061010082840312156105a4576105a4600080fd5b600061017e84846104ca565b80356001600160e01b031916828260048210156105e3576105de6001600160e01b0319836004036008021b90565b831692505b505092915050565b600067ffffffffffffffff8211156106055761060561042e565b601f19601f83011660200192915050565b82818337506000910152565b6000610635610630846105eb565b610471565b90508281526020810184848401111561065057610650600080fd5b61065b848285610616565b509392505050565b600082601f83011261067757610677600080fd5b813561017e848260208601610622565b600060a0828403121561069c5761069c600080fd5b6106a660a0610471565b9050813567ffffffffffffffff8111156106c2576106c2600080fd5b6106ce84828501610663565b82525060206106df848483016102ab565b60208301525060406106f384828501610297565b604083015250606061070784828501610297565b606083015250608061071b84828501610297565b60808301525092915050565b60006020828403121561073c5761073c600080fd5b813567ffffffffffffffff81111561075657610756600080fd5b61017e84828501610687565b805160a08084526000919084019061077a8282610355565b915050602083015161078f6020860182610204565b5060408301516107a260408601826101dc565b5060608301516107b560608601826101dc565b50608083015161065b60808601826101dc565b60208082528101610398818461076256fea264697066735822122074ef6d45ab6e94047659a2e87f158e4c97678a424b5b74b22e4788ec2429418164736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}