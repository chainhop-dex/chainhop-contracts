{
  "address": "0xE48151964556381B33f93E05E36381Fd53Ec053E",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ICodec.SwapDescription",
          "name": "_swap",
          "type": "tuple"
        }
      ],
      "name": "decodeCalldata",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amountInOverride",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "encodeCalldataWithOverride",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "swapCalldata",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xfb8e7bbac8860f95b19627d1ae6dd1bedb7a420af74ecf9024516e9d8b540172",
  "receipt": {
    "to": null,
    "from": "0x58b529F9084D7eAA598EB3477Fe36064C5B7bbC1",
    "contractAddress": "0xE48151964556381B33f93E05E36381Fd53Ec053E",
    "transactionIndex": 346,
    "gasUsed": "459547",
    "logsBloom": "0x
    "blockHash": "0xd88f9a915a15a17a16eca9ce38283c26c12e9a48dd2f3ce6f8b47001adf0e745",
    "transactionHash": "0xfb8e7bbac8860f95b19627d1ae6dd1bedb7a420af74ecf9024516e9d8b540172",
    "logs": [],
    "blockNumber": 16538813,
    "cumulativeGasUsed": "49104784",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5284e455062929d7f89fe20002113c31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ICodec.SwapDescription\",\"name\":\"_swap\",\"type\":\"tuple\"}],\"name\":\"decodeCalldata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amountInOverride\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"encodeCalldataWithOverride\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"swapCalldata\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/codecs/CurvePoolCodec.sol\":\"CurvePoolCodec\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/codecs/CurvePoolCodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.12;\\n\\nimport \\\"../interfaces/IUniswapV2Router01.sol\\\";\\nimport \\\"../interfaces/ICodec.sol\\\";\\nimport \\\"../interfaces/ICurvePool.sol\\\";\\n\\ncontract CurvePoolCodec is ICodec {\\n    struct SwapCalldata {\\n        int128 i;\\n        int128 j;\\n        uint256 dx;\\n        uint256 min_dy;\\n    }\\n\\n    function decodeCalldata(ICodec.SwapDescription calldata _swap)\\n        external\\n        view\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        )\\n    {\\n        SwapCalldata memory data = abi.decode((_swap.data[4:]), (SwapCalldata));\\n        amountIn = data.dx;\\n        tokenIn = ICurvePool(_swap.dex).coins(uint256(int256(data.i)));\\n        tokenOut = ICurvePool(_swap.dex).coins(uint256(int256(data.j)));\\n    }\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata _data,\\n        uint256 _amountInOverride,\\n        address // receiverOverride\\n    ) external pure returns (bytes memory swapCalldata) {\\n        bytes4 selector = bytes4(_data);\\n        SwapCalldata memory data = abi.decode((_data[4:]), (SwapCalldata));\\n        data.dx = _amountInOverride;\\n        return abi.encodeWithSelector(selector, data);\\n    }\\n}\\n\",\"keccak256\":\"0x57c76a40230f56303c4c2a06cb76aebd9c812c6ee3029b3e8fc02de46304e914\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ICodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface ICodec {\\n    struct SwapDescription {\\n        address dex; // the DEX to use for the swap, zero address implies no swap needed\\n        bytes data; // the data to call the dex with\\n    }\\n\\n    function decodeCalldata(SwapDescription calldata swap)\\n        external\\n        view\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        );\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata data,\\n        uint256 amountInOverride,\\n        address receiverOverride\\n    ) external pure returns (bytes memory swapCalldata);\\n}\\n\",\"keccak256\":\"0x3c063f0ffd87df3df38998c78273bc00ac835331905be997c7e3c6aa3bdbdcc4\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ICurvePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.12;\\n\\ninterface ICurvePool {\\n    function coins(uint256 i) external view returns (address);\\n\\n    function exchange(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy\\n    ) external;\\n\\n    function get_dy(\\n        int128 i,\\n        int128 j,\\n        uint256 dx\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9c4ff98121483adb16863b7c1d193164db0bdbf65bf7777ef7ff9addb57716d\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.12;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x87420cf46ee75694fdd1f98a82f756390b8489c519f29bceda30fa4163b9e6fe\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061075a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063358f0e1c1461003b5780634c6da26914610066575b600080fd5b61004e610049366004610298565b610086565b60405161005d93929190610304565b60405180910390f35b6100796100743660046103ad565b6101e1565b60405161005d919061047e565b60008080806100986020860186610496565b6100a69160049082906104f5565b8101906100b3919061060b565b6040810151945090506100c9602086018661062c565b73ffffffffffffffffffffffffffffffffffffffff1663c66106578260000151600f0b6040518263ffffffff1660e01b8152600401610108919061064d565b602060405180830381865afa158015610125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101499190610666565b9250610158602086018661062c565b73ffffffffffffffffffffffffffffffffffffffff1663c66106578260200151600f0b6040518263ffffffff1660e01b8152600401610197919061064d565b602060405180830381865afa1580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d89190610666565b93959294505050565b606060006101ef8587610687565b90506000610200866004818a6104f5565b81019061020d919061060b565b6040808201879052519091508290610229908390602401610716565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152925050505b949350505050565b60006040828403121561029257610292600080fd5b50919050565b6000602082840312156102ad576102ad600080fd5b813567ffffffffffffffff8111156102c7576102c7600080fd5b6102758482850161027d565b805b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b6102d5816102db565b6060810161031282866102d3565b61031f60208301856102fb565b61027560408301846102fb565b60008083601f84011261034157610341600080fd5b50813567ffffffffffffffff81111561035c5761035c600080fd5b60208301915083600182028301111561037757610377600080fd5b9250929050565b805b811461038b57600080fd5b50565b80356102f58161037e565b610380816102db565b80356102f581610399565b600080600080606085870312156103c6576103c6600080fd5b843567ffffffffffffffff8111156103e0576103e0600080fd5b6103ec8782880161032c565b945094505060206103ff8782880161038e565b9250506040610410878288016103a2565b91505092959194509250565b60005b8381101561043757818101518382015260200161041f565b83811115610446576000848401525b50505050565b6000610456825190565b80845260208401935061046d81856020860161041c565b601f01601f19169290920192915050565b6020808252810161048f818461044c565b9392505050565b6000808335601e19368590030181126104b1576104b1600080fd5b80840192508235915067ffffffffffffffff8211156104d2576104d2600080fd5b6020830192506001820236038313156104ed576104ed600080fd5b509250929050565b6000808585111561050857610508600080fd5b8386111561051857610518600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561056157610561610525565b6040525050565b600061057360405190565b905061057f828261053b565b919050565b61038081600f0b90565b80356102f581610584565b6000608082840312156105ae576105ae600080fd5b6105b86080610568565b905060006105c6848461058e565b82525060206105d78484830161058e565b60208301525060406105eb8482850161038e565b60408301525060606105ff8482850161038e565b60608301525092915050565b60006080828403121561062057610620600080fd5b60006102758484610599565b60006020828403121561064157610641600080fd5b600061027584846103a2565b602081016102f582846102d3565b80516102f581610399565b60006020828403121561067b5761067b600080fd5b6000610275848461065b565b80356001600160e01b031916828260048210156106ba576106b56001600160e01b0319836004036008021b90565b831692505b505092915050565b6102d581600f0b90565b805160808301906106dd84826106c2565b5060208201516106f060208501826106c2565b50604082015161070360408501826102d3565b50606082015161044660608501826102d3565b608081016102f582846106cc56fea264697066735822122013bd57d7e4c61effad2b94ff1be186f96206a5804053adec8c8a6124aecf916564736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063358f0e1c1461003b5780634c6da26914610066575b600080fd5b61004e610049366004610298565b610086565b60405161005d93929190610304565b60405180910390f35b6100796100743660046103ad565b6101e1565b60405161005d919061047e565b60008080806100986020860186610496565b6100a69160049082906104f5565b8101906100b3919061060b565b6040810151945090506100c9602086018661062c565b73ffffffffffffffffffffffffffffffffffffffff1663c66106578260000151600f0b6040518263ffffffff1660e01b8152600401610108919061064d565b602060405180830381865afa158015610125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101499190610666565b9250610158602086018661062c565b73ffffffffffffffffffffffffffffffffffffffff1663c66106578260200151600f0b6040518263ffffffff1660e01b8152600401610197919061064d565b602060405180830381865afa1580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d89190610666565b93959294505050565b606060006101ef8587610687565b90506000610200866004818a6104f5565b81019061020d919061060b565b6040808201879052519091508290610229908390602401610716565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152925050505b949350505050565b60006040828403121561029257610292600080fd5b50919050565b6000602082840312156102ad576102ad600080fd5b813567ffffffffffffffff8111156102c7576102c7600080fd5b6102758482850161027d565b805b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b6102d5816102db565b6060810161031282866102d3565b61031f60208301856102fb565b61027560408301846102fb565b60008083601f84011261034157610341600080fd5b50813567ffffffffffffffff81111561035c5761035c600080fd5b60208301915083600182028301111561037757610377600080fd5b9250929050565b805b811461038b57600080fd5b50565b80356102f58161037e565b610380816102db565b80356102f581610399565b600080600080606085870312156103c6576103c6600080fd5b843567ffffffffffffffff8111156103e0576103e0600080fd5b6103ec8782880161032c565b945094505060206103ff8782880161038e565b9250506040610410878288016103a2565b91505092959194509250565b60005b8381101561043757818101518382015260200161041f565b83811115610446576000848401525b50505050565b6000610456825190565b80845260208401935061046d81856020860161041c565b601f01601f19169290920192915050565b6020808252810161048f818461044c565b9392505050565b6000808335601e19368590030181126104b1576104b1600080fd5b80840192508235915067ffffffffffffffff8211156104d2576104d2600080fd5b6020830192506001820236038313156104ed576104ed600080fd5b509250929050565b6000808585111561050857610508600080fd5b8386111561051857610518600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561056157610561610525565b6040525050565b600061057360405190565b905061057f828261053b565b919050565b61038081600f0b90565b80356102f581610584565b6000608082840312156105ae576105ae600080fd5b6105b86080610568565b905060006105c6848461058e565b82525060206105d78484830161058e565b60208301525060406105eb8482850161038e565b60408301525060606105ff8482850161038e565b60608301525092915050565b60006080828403121561062057610620600080fd5b60006102758484610599565b60006020828403121561064157610641600080fd5b600061027584846103a2565b602081016102f582846102d3565b80516102f581610399565b60006020828403121561067b5761067b600080fd5b6000610275848461065b565b80356001600160e01b031916828260048210156106ba576106b56001600160e01b0319836004036008021b90565b831692505b505092915050565b6102d581600f0b90565b805160808301906106dd84826106c2565b5060208201516106f060208501826106c2565b50604082015161070360408501826102d3565b50606082015161044660608501826102d3565b608081016102f582846106cc56fea264697066735822122013bd57d7e4c61effad2b94ff1be186f96206a5804053adec8c8a6124aecf916564736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}