{
  "address": "0x6468282dBc46C289774455E3e0446d4E88e95A32",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        },
        {
          "internalType": "address[][]",
          "name": "_poolTokens",
          "type": "address[][]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[][]",
          "name": "poolTokens",
          "type": "address[][]"
        }
      ],
      "name": "PoolTokensSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ICodec.SwapDescription",
          "name": "_swap",
          "type": "tuple"
        }
      ],
      "name": "decodeCalldata",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amountInOverride",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiverOverride",
          "type": "address"
        }
      ],
      "name": "encodeCalldataWithOverride",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "swapCalldata",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolToTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        },
        {
          "internalType": "address[][]",
          "name": "_poolTokens",
          "type": "address[][]"
        }
      ],
      "name": "setPoolTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4f22235dad01062c992186462bd81cdfdb958c138c4963d7c2440c40ee25ca12",
  "receipt": {
    "to": null,
    "from": "0x8b5F94a2c2e23eE8cC0Ff56872aF973243eF7628",
    "contractAddress": "0x6468282dBc46C289774455E3e0446d4E88e95A32",
    "transactionIndex": 1,
    "gasUsed": "4061496",
    "logsBloom": "0x
    "blockHash": "0xe998a490122c3227e0ffa4161817be6eaba25575aa907d7295a55d09fcafbe8d",
    "transactionHash": "0x4f22235dad01062c992186462bd81cdfdb958c138c4963d7c2440c40ee25ca12",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 38508672,
        "transactionHash": "0x4f22235dad01062c992186462bd81cdfdb958c138c4963d7c2440c40ee25ca12",
        "address": "0x6468282dBc46C289774455E3e0446d4E88e95A32",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008b5f94a2c2e23ee8cc0ff56872af973243ef7628"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xe998a490122c3227e0ffa4161817be6eaba25575aa907d7295a55d09fcafbe8d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 38508672,
        "transactionHash": "0x4f22235dad01062c992186462bd81cdfdb958c138c4963d7c2440c40ee25ca12",
        "address": "0x6468282dBc46C289774455E3e0446d4E88e95A32",
        "topics": [
          "0x38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f07d553b195080f84f582e88ecdd54baa122b27900000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000300000000000000000000000017fc002b466eec40dae837fc4be5c67993ddbd6f000000000000000000000000ff970a61a04b1ca14834a43f5de4533ebddb5cc8000000000000000000000000fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",
        "logIndex": 1,
        "blockHash": "0xe998a490122c3227e0ffa4161817be6eaba25575aa907d7295a55d09fcafbe8d"
      }
    ],
    "blockNumber": 38508672,
    "cumulativeGasUsed": "4061496",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xf07d553B195080F84F582e88ecdD54bAa122b279"
    ],
    [
      [
        "0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F",
        "0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",
        "0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9"
      ]
    ]
  ],
  "numDeployments": 3,
  "solcInputHash": "fb7635353833d52c2a98e3fc1b0000fe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_poolTokens\",\"type\":\"address[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[][]\",\"name\":\"poolTokens\",\"type\":\"address[][]\"}],\"name\":\"PoolTokensSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ICodec.SwapDescription\",\"name\":\"_swap\",\"type\":\"tuple\"}],\"name\":\"decodeCalldata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amountInOverride\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiverOverride\",\"type\":\"address\"}],\"name\":\"encodeCalldataWithOverride\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"swapCalldata\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolToTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_poolTokens\",\"type\":\"address[][]\"}],\"name\":\"setPoolTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/codecs/CurveMetaPoolCodec.sol\":\"CurveMetaPoolCodec\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/codecs/CurveMetaPoolCodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.15;\\n\\nimport \\\"../lib/Ownable.sol\\\";\\nimport \\\"../interfaces/ICodec.sol\\\";\\nimport \\\"../interfaces/ICurvePool.sol\\\";\\nimport \\\"./CurveTokenAddresses.sol\\\";\\n\\ncontract CurveMetaPoolCodec is ICodec, CurveTokenAddresses {\\n    struct SwapCalldata {\\n        int128 i;\\n        int128 j;\\n        uint256 dx;\\n        uint256 min_dy;\\n        address _receiver;\\n    }\\n\\n    constructor(address[] memory _pools, address[][] memory _poolTokens) CurveTokenAddresses(_pools, _poolTokens) {}\\n\\n    function decodeCalldata(ICodec.SwapDescription calldata _swap)\\n        external\\n        view\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        )\\n    {\\n        SwapCalldata memory data = abi.decode((_swap.data[4:]), (SwapCalldata));\\n        amountIn = data.dx;\\n        uint256 i = uint256(int256(data.i));\\n        uint256 j = uint256(int256(data.j));\\n        address[] memory tokens = poolToTokens[_swap.dex];\\n        tokenIn = tokens[i];\\n        tokenOut = tokens[j];\\n    }\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata _data,\\n        uint256 _amountInOverride,\\n        address _receiverOverride\\n    ) external pure returns (bytes memory swapCalldata) {\\n        bytes4 selector = bytes4(_data);\\n        SwapCalldata memory data = abi.decode((_data[4:]), (SwapCalldata));\\n        data.dx = _amountInOverride;\\n        data._receiver = _receiverOverride;\\n        return abi.encodeWithSelector(selector, data);\\n    }\\n}\\n\",\"keccak256\":\"0x461908fb18b4b4a52f2a047e7573f3757fe91e78ee592411a8140a2723e18166\",\"license\":\"GPL-3.0-only\"},\"contracts/codecs/CurveTokenAddresses.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.15;\\n\\nimport \\\"../lib/Ownable.sol\\\";\\n\\ncontract CurveTokenAddresses is Ownable {\\n    event PoolTokensSet(address[] pools, address[][] poolTokens);\\n\\n    // Pool address to *underlying* token addresses. position sensitive.\\n    // This is needed because some of the metapools fail to implement curve's underlying_coins() spec,\\n    // therefore no consistant way to query token addresses by their indices.\\n    mapping(address => address[]) public poolToTokens;\\n\\n    constructor(address[] memory _pools, address[][] memory _poolTokens) {\\n        _setPoolTokens(_pools, _poolTokens);\\n    }\\n\\n    function setPoolTokens(address[] calldata _pools, address[][] calldata _poolTokens) external onlyOwner {\\n        _setPoolTokens(_pools, _poolTokens);\\n    }\\n\\n    function _setPoolTokens(address[] memory _pools, address[][] memory _poolTokens) private {\\n        require(_pools.length == _poolTokens.length, \\\"len mm\\\");\\n        for (uint256 i = 0; i < _pools.length; i++) {\\n            poolToTokens[_pools[i]] = _poolTokens[i];\\n        }\\n        emit PoolTokensSet(_pools, _poolTokens);\\n    }\\n}\\n\",\"keccak256\":\"0xd498d529c8ce0535df4778ce5360585381b78e665106d1897214e3b9a5be001a\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ICodec.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface ICodec {\\n    struct SwapDescription {\\n        address dex; // the DEX to use for the swap, zero address implies no swap needed\\n        bytes data; // the data to call the dex with\\n    }\\n\\n    function decodeCalldata(SwapDescription calldata swap)\\n        external\\n        view\\n        returns (\\n            uint256 amountIn,\\n            address tokenIn,\\n            address tokenOut\\n        );\\n\\n    function encodeCalldataWithOverride(\\n        bytes calldata data,\\n        uint256 amountInOverride,\\n        address receiverOverride\\n    ) external pure returns (bytes memory swapCalldata);\\n}\\n\",\"keccak256\":\"0x3c063f0ffd87df3df38998c78273bc00ac835331905be997c7e3c6aa3bdbdcc4\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/ICurvePool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.15;\\n\\ninterface ICurvePool {\\n    function coins(uint256 i) external view returns (address);\\n\\n    function underlying_coins(uint256 i) external view returns (address);\\n\\n    // plain & meta pool\\n    function get_dy(\\n        int128 i,\\n        int128 j,\\n        uint256 dx\\n    ) external view returns (uint256);\\n\\n    // meta pool\\n    function get_dy_underlying(\\n        int128 i,\\n        int128 j,\\n        uint256 dx\\n    ) external view returns (uint256);\\n\\n    // plain & meta pool\\n    function exchange(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy\\n    ) external;\\n\\n    // meta pool\\n    function exchange_underlying(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    // special function signature that is only used by the sUSD pool on Ethereum 0xA5407eAE9Ba41422680e2e00537571bcC53efBfD\\n    function exchange_underlying(\\n        int128 i,\\n        int128 j,\\n        uint256 dx,\\n        uint256 min_dy\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2be669549b0da2b01608c060c7ae85d3eb4f2deb42e0b12d99c7ee8a7f8fa6a3\",\"license\":\"GPL-3.0-only\"},\"contracts/lib/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n *\\n * This adds a normal func that setOwner if _owner is address(0). So we can't allow\\n * renounceOwnership. So we can support Proxy based upgradable contract\\n */\\nabstract contract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Only to be called by inherit contracts, in their init func called by Proxy\\n     * we require _owner == address(0), which is only possible when it's a delegateCall\\n     * because constructor sets _owner in contract state.\\n     */\\n    function initOwner() internal {\\n        require(_owner == address(0), \\\"owner already set\\\");\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x2a92103195b8dce0f34fdf9bf7f94ddf38bf8edf0c0fd4be21323c47016687e9\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200124738038062001247833981016040819052620000349162000336565b8181620000413362000057565b6200004d8282620000a7565b505050506200052d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051825114620000e65760405162461bcd60e51b81526020600482015260066024820152656c656e206d6d60d01b604482015260640160405180910390fd5b60005b82518110156200017c5781818151811062000108576200010862000419565b60200260200101516001600085848151811062000129576200012962000419565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020908051906020019062000166929190620001bc565b508062000173816200042f565b915050620000e9565b507f38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e8282604051620001b092919062000457565b60405180910390a15050565b82805482825590600052602060002090810192821562000214579160200282015b828111156200021457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001dd565b506200022292915062000226565b5090565b5b8082111562000222576000815560010162000227565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200027e576200027e6200023d565b604052919050565b60006001600160401b03821115620002a257620002a26200023d565b5060051b60200190565b600082601f830112620002be57600080fd5b81516020620002d7620002d18362000286565b62000253565b82815260059290921b84018101918181019086841115620002f757600080fd5b8286015b848110156200032b5780516001600160a01b03811681146200031d5760008081fd5b8352918301918301620002fb565b509695505050505050565b600080604083850312156200034a57600080fd5b82516001600160401b03808211156200036257600080fd5b6200037086838701620002ac565b93506020915081850151818111156200038857600080fd5b8501601f810187136200039a57600080fd5b8051620003ab620002d18262000286565b81815260059190911b82018401908481019089831115620003cb57600080fd5b8584015b838110156200040857805186811115620003e95760008081fd5b620003f98c8983890101620002ac565b845250918601918601620003cf565b508096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200045057634e487b7160e01b600052601160045260246000fd5b5060010190565b604080825283519082018190526000906020906060840190828701845b828110156200049b5781516001600160a01b03168452928401929084019060010162000474565b50505083810382850152845180825282820190600581901b8301840187850160005b838110156200051e57858303601f1901855281518051808552908801908885019060005b81811015620005085783516001600160a01b03168352928a0192918a0191600101620004e1565b50509588019593505090860190600101620004bd565b50909998505050505050505050565b610d0a806200053d6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80639c20a863116100505780639c20a863146100f9578063f2fde38b1461010c578063ffe3fd301461012157600080fd5b8063358f0e1c146100775780634c6da269146100b45780638da5cb5b146100d4575b600080fd5b61008a610085366004610720565b610134565b604080519384526001600160a01b0392831660208501529116908201526060015b60405180910390f35b6100c76100c236600461077e565b610250565b6040516100ab9190610807565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100ab565b6100e161010736600461085c565b61033e565b61011f61011a366004610886565b610376565b005b61011f61012f3660046108ed565b61046c565b60008080806101466020860186610959565b6101549160049082906109a0565b8101906101619190610a23565b60408101518151602080840151929750929350600f90810b9291900b906000906001908290610192908b018b610886565b6001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561020657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101e8575b5050505050905080838151811061021f5761021f610aa3565b6020026020010151955080828151811061023b5761023b610aa3565b60200260200101519450505050509193909250565b6060600061025e8587610ab9565b9050600061026f866004818a6109a0565b81019061027c9190610a23565b60408181018781526001600160a01b038781166080850190815292518451600f90810b60248301526020860151900b60448201529151606483015260608401516084830152915190911660a4820152909150829060c40160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915292505050949350505050565b6001602052816000526040600020818154811061035a57600080fd5b6000918252602090912001546001600160a01b03169150829050565b336103896000546001600160a01b031690565b6001600160a01b0316146103e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103db565b61046981610523565b50565b3361047f6000546001600160a01b031690565b6001600160a01b0316146104d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103db565b61051d8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506105189250859150869050610b25565b610580565b50505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146105d15760405162461bcd60e51b815260206004820152600660248201527f6c656e206d6d000000000000000000000000000000000000000000000000000060448201526064016103db565b60005b825181101561065b578181815181106105ef576105ef610aa3565b60200260200101516001600085848151811061060d5761060d610aa3565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000209080519060200190610648929190610699565b508061065381610bf7565b9150506105d4565b507f38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e828260405161068d929190610c62565b60405180910390a15050565b8280548282559060005260206000209081019282156106fb579160200282015b828111156106fb578251825473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039091161782556020909201916001909101906106b9565b5061070792915061070b565b5090565b5b80821115610707576000815560010161070c565b60006020828403121561073257600080fd5b813567ffffffffffffffff81111561074957600080fd5b82016040818503121561075b57600080fd5b9392505050565b80356001600160a01b038116811461077957600080fd5b919050565b6000806000806060858703121561079457600080fd5b843567ffffffffffffffff808211156107ac57600080fd5b818701915087601f8301126107c057600080fd5b8135818111156107cf57600080fd5b8860208285010111156107e157600080fd5b6020928301965094505085013591506107fc60408601610762565b905092959194509250565b600060208083528351808285015260005b8181101561083457858101830151858201604001528201610818565b81811115610846576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561086f57600080fd5b61087883610762565b946020939093013593505050565b60006020828403121561089857600080fd5b61075b82610762565b60008083601f8401126108b357600080fd5b50813567ffffffffffffffff8111156108cb57600080fd5b6020830191508360208260051b85010111156108e657600080fd5b9250929050565b6000806000806040858703121561090357600080fd5b843567ffffffffffffffff8082111561091b57600080fd5b610927888389016108a1565b9096509450602087013591508082111561094057600080fd5b5061094d878288016108a1565b95989497509550505050565b6000808335601e1984360301811261097057600080fd5b83018035915067ffffffffffffffff82111561098b57600080fd5b6020019150368190038213156108e657600080fd5b600080858511156109b057600080fd5b838611156109bd57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a0957610a096109ca565b604052919050565b8035600f81900b811461077957600080fd5b600060a08284031215610a3557600080fd5b60405160a0810181811067ffffffffffffffff82111715610a5857610a586109ca565b604052610a6483610a11565b8152610a7260208401610a11565b60208201526040830135604082015260608301356060820152610a9760808401610762565b60808201529392505050565b634e487b7160e01b600052603260045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610af95780818660040360031b1b83161692505b505092915050565b600067ffffffffffffffff821115610b1b57610b1b6109ca565b5060051b60200190565b6000610b38610b3384610b01565b6109e0565b83815260208082019190600586811b860136811115610b5657600080fd5b865b81811015610bea57803567ffffffffffffffff811115610b785760008081fd5b880136601f820112610b8a5760008081fd5b8035610b98610b3382610b01565b81815290851b82018601908681019036831115610bb55760008081fd5b928701925b82841015610bda57610bcb84610762565b82529287019290870190610bba565b8952505050948301948301610b58565b5092979650505050505050565b600060018201610c1757634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b83811015610c575781516001600160a01b031687529582019590820190600101610c32565b509495945050505050565b604081526000610c756040830185610c1e565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015610cc557601f19878403018552610cb3838351610c1e565b94860194925090850190600101610c97565b5090999850505050505050505056fea2646970667358221220aa76029026bcf4455481af8b7a1f224416d2a236589322a60eae6b2fd22eb4d264736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80639c20a863116100505780639c20a863146100f9578063f2fde38b1461010c578063ffe3fd301461012157600080fd5b8063358f0e1c146100775780634c6da269146100b45780638da5cb5b146100d4575b600080fd5b61008a610085366004610720565b610134565b604080519384526001600160a01b0392831660208501529116908201526060015b60405180910390f35b6100c76100c236600461077e565b610250565b6040516100ab9190610807565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100ab565b6100e161010736600461085c565b61033e565b61011f61011a366004610886565b610376565b005b61011f61012f3660046108ed565b61046c565b60008080806101466020860186610959565b6101549160049082906109a0565b8101906101619190610a23565b60408101518151602080840151929750929350600f90810b9291900b906000906001908290610192908b018b610886565b6001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561020657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101e8575b5050505050905080838151811061021f5761021f610aa3565b6020026020010151955080828151811061023b5761023b610aa3565b60200260200101519450505050509193909250565b6060600061025e8587610ab9565b9050600061026f866004818a6109a0565b81019061027c9190610a23565b60408181018781526001600160a01b038781166080850190815292518451600f90810b60248301526020860151900b60448201529151606483015260608401516084830152915190911660a4820152909150829060c40160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915292505050949350505050565b6001602052816000526040600020818154811061035a57600080fd5b6000918252602090912001546001600160a01b03169150829050565b336103896000546001600160a01b031690565b6001600160a01b0316146103e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166104605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103db565b61046981610523565b50565b3361047f6000546001600160a01b031690565b6001600160a01b0316146104d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103db565b61051d8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506105189250859150869050610b25565b610580565b50505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146105d15760405162461bcd60e51b815260206004820152600660248201527f6c656e206d6d000000000000000000000000000000000000000000000000000060448201526064016103db565b60005b825181101561065b578181815181106105ef576105ef610aa3565b60200260200101516001600085848151811061060d5761060d610aa3565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000209080519060200190610648929190610699565b508061065381610bf7565b9150506105d4565b507f38a931c26f20e9b16579a20bed4b3da2a2c983babd8b2988381a242462e9d42e828260405161068d929190610c62565b60405180910390a15050565b8280548282559060005260206000209081019282156106fb579160200282015b828111156106fb578251825473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039091161782556020909201916001909101906106b9565b5061070792915061070b565b5090565b5b80821115610707576000815560010161070c565b60006020828403121561073257600080fd5b813567ffffffffffffffff81111561074957600080fd5b82016040818503121561075b57600080fd5b9392505050565b80356001600160a01b038116811461077957600080fd5b919050565b6000806000806060858703121561079457600080fd5b843567ffffffffffffffff808211156107ac57600080fd5b818701915087601f8301126107c057600080fd5b8135818111156107cf57600080fd5b8860208285010111156107e157600080fd5b6020928301965094505085013591506107fc60408601610762565b905092959194509250565b600060208083528351808285015260005b8181101561083457858101830151858201604001528201610818565b81811115610846576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561086f57600080fd5b61087883610762565b946020939093013593505050565b60006020828403121561089857600080fd5b61075b82610762565b60008083601f8401126108b357600080fd5b50813567ffffffffffffffff8111156108cb57600080fd5b6020830191508360208260051b85010111156108e657600080fd5b9250929050565b6000806000806040858703121561090357600080fd5b843567ffffffffffffffff8082111561091b57600080fd5b610927888389016108a1565b9096509450602087013591508082111561094057600080fd5b5061094d878288016108a1565b95989497509550505050565b6000808335601e1984360301811261097057600080fd5b83018035915067ffffffffffffffff82111561098b57600080fd5b6020019150368190038213156108e657600080fd5b600080858511156109b057600080fd5b838611156109bd57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a0957610a096109ca565b604052919050565b8035600f81900b811461077957600080fd5b600060a08284031215610a3557600080fd5b60405160a0810181811067ffffffffffffffff82111715610a5857610a586109ca565b604052610a6483610a11565b8152610a7260208401610a11565b60208201526040830135604082015260608301356060820152610a9760808401610762565b60808201529392505050565b634e487b7160e01b600052603260045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008135818116916004851015610af95780818660040360031b1b83161692505b505092915050565b600067ffffffffffffffff821115610b1b57610b1b6109ca565b5060051b60200190565b6000610b38610b3384610b01565b6109e0565b83815260208082019190600586811b860136811115610b5657600080fd5b865b81811015610bea57803567ffffffffffffffff811115610b785760008081fd5b880136601f820112610b8a5760008081fd5b8035610b98610b3382610b01565b81815290851b82018601908681019036831115610bb55760008081fd5b928701925b82841015610bda57610bcb84610762565b82529287019290870190610bba565b8952505050948301948301610b58565b5092979650505050505050565b600060018201610c1757634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b83811015610c575781516001600160a01b031687529582019590820190600101610c32565b509495945050505050565b604081526000610c756040830185610c1e565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015610cc557601f19878403018552610cb3838351610c1e565b94860194925090850190600101610c97565b5090999850505050505050505056fea2646970667358221220aa76029026bcf4455481af8b7a1f224416d2a236589322a60eae6b2fd22eb4d264736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9681,
        "contract": "contracts/codecs/CurveMetaPoolCodec.sol:CurveMetaPoolCodec",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6286,
        "contract": "contracts/codecs/CurveMetaPoolCodec.sol:CurveMetaPoolCodec",
        "label": "poolToTokens",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      }
    }
  }
}